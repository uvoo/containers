apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimirproxy
  labels:
    app: mimirproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mimirproxy
  template:
    metadata:
      labels:
        app: mimirproxy
    spec:
      containers:
      - name: mimirproxy
        image: uvoo/mimirproxy:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: mimirproxy-env
        - secretRef:
            name: mimirproxy-env
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: mimirproxy
  # annotations:
  #   service.beta.kubernetes.io/azure-load-balancer-internal: "true" # if azure for private lb ep
spec:
  selector:
    app: mimirproxy  # Replace with your pod's label selector
  ports:
    - name: http
      protocol: TCP
      port: 80          # External port (client-facing)
      targetPort: 8080  # Internal port (container-facing)
    - name: https
      protocol: TCP
      port: 443         # External port (client-facing)
      targetPort: 8443  # Internal port (container-facing)
  type: LoadBalancer    # Change to ClusterIP or LoadBalancer or NodePort if needed
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mimir-proxy
  namespace: mimir-proxy
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: mimir-proxy.example.com
      http:
        paths:
          - path: /api/v1
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
          - path: /prometheus
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
          - path: /otlp/v1/metrics
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
          - path: /distributor
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
          - path: /prometheus/api/v1/rules
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
          - path: /prometheus/api/v1/alerts
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
          - path: /prometheus/config/v1/rules
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
          - path: /api/v1/status/buildinfo
            pathType: Prefix
            backend:
              service:
                name: mimir-proxy
                port:
                  number: 8080
---


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: mimirproxy
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   tls:
#   - hosts:
#       - mimirproxy.example.com
#     secretName: mimirproxy-tls
#   rules:
#   - host: mimirproxy.example.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: mimirproxy
#             port:
#               number: 80
