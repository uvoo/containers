# To deploy: kubectl create -f nginx-hello-world-deployment.yaml
# Access it with the API as a proxy:
# $ kubectl proxy
# Then in you browser: http://localhost:8001/api/v1/namespaces/default/services/nginx:/proxy/#!/

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ca
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: certificates
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
  - port: 8443
    targetPort: 8443
    nodePort: 30099
  selector:
    app: cfssl
---
apiVersion: v1
kind: Service
metadata:
  name: cfssl-lb
  labels:
    name: cfssl-lb
spec:
  type: LoadBalancer
  ports:
    - name: nginx
      port: 8443
      targetPort: 8443
      protocol: TCP
  selector:
     app: cfssl
    # app.kubernetes.io/instance: postgrest
    # app.kubernetes.io/name: postgrest
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cfssl
spec:
  selector:
    matchLabels:
      app: cfssl
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cfssl
    spec:
      containers:
      - name: cfssl
        image: uvoo/cfssl:latest
        envFrom:
        - configMapRef:
            name: cfssl-env
        - secretRef:
            name: cfssl-env
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
          - name: nginx-conf
            mountPath: /etc/nginx/
          - name: files
            mountPath: /files
      volumes:
        - name: nginx-conf
          secret:
            secretName: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: files
          secret:
            secretName: files
        - name: ca
          persistentVolumeClaim:
            claimName: ca
        - name: certificates
          persistentVolumeClaim:
            claimName: certificates
