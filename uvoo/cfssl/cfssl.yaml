# To deploy: kubectl create -f nginx-hello-world-deployment.yaml
# Access it with the API as a proxy:
# $ kubectl proxy
# Then in you browser: http://localhost:8001/api/v1/namespaces/default/services/nginx:/proxy/#!/

apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
  - port: 8443 
    targetPort: 8443
    nodePort: 30099
  selector:
    app: cfssl
---
apiVersion: v1
kind: Service
metadata:
  name: cfssl-lb
  labels:
    name: cfssl-lb
spec:
  type: LoadBalancer
  ports:
    - name: nginx
      port: 8443
      targetPort: 8443
      protocol: TCP
  selector:
     app: cfssl
    # app.kubernetes.io/instance: postgrest
    # app.kubernetes.io/name: postgrest
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
      worker_connections  1024;
    }
    http {
      server {
        listen 8443 ssl;
        server_name your.cfssl.server;

        ssl_certificate /files/self.crt;
        ssl_certificate_key /files/self.key;

        # location /nginxhealthz {
        #   return 200 "nginx ok";
        # }
        location / {
          allow 192.168.0.0/16;
          allow 10.0.0.0/8;
          allow 172.16.0.0/12;
          deny all;

          auth_basic "Restricted Access";
          auth_basic_user_file /files/.htpasswd;

          proxy_pass http://localhost:3000;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cfssl
spec:
  selector:
    matchLabels:
      app: cfssl
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cfssl
    spec:
      containers:
      - name: cfssl
        image: uvoo/cfssl:0.0.3
        envFrom:
        - configMapRef:
            name: cfssl-env
        - secretRef:
            name: cfssl-env
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
          - name: nginx-conf
            mountPath: /etc/nginx/
          - name: files
            mountPath: /files
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: files
          secret:
            secretName: files
